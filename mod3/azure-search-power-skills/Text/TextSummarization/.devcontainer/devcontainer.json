{
	"name": "TextSummarization",
	"build": { 
		"context": "..",
		"dockerfile": "Dockerfile",
		"args": {
			"INSTALL_NODE": "true",
			"NODE_VERSION": "lts/*",
			// To ensure that the group ID for the docker group in the container
			// matches the group ID on the host, add this to your .bash_profile on the host
			// 		export DOCKER_GROUP_ID=$(getent group docker | awk -F ":" '{ print $3 }')
			"DOCKER_GROUP_ID": "${localEnv:DOCKER_GROUP_ID}"
		}
	},
	"runArgs": [
		"--network", "host" // use host networking so that the dev container can access the API when running the container locally
	],

	"mounts": [
		// Keep command history 
		"source=TextSummarization-bashhistory,target=/home/vscode/commandhistory",
		// Mounts the login details from the host machine to azcli works in the container
		"type=bind,source=${env:HOME}${env:USERPROFILE}/.azure,target=/home/vscode/.azure",
		// Mount docker socket for docker builds
		"type=bind,source=/var/run/docker.sock,target=/var/run/docker.sock"
	],

	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"python.pythonPath": "/opt/conda/bin/python",
		"python.languageServer": "Pylance",
		"python.linting.enabled": true,
		"python.linting.pylintEnabled": true,
		"python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
		"python.formatting.blackPath": "/usr/local/py-utils/bin/black",
		"python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
		"python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
		"python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
		"python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
		"python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
		"python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
		"python.linting.pylintPath": "/usr/local/py-utils/bin/pylint"
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-python.python",
		"ms-python.vscode-pylance",
		"irongeek.vscode-env",
		"ms-azuretools.vscode-docker",
		"ms-toolsai.jupyter",
		"hashicorp.terraform",
		"humao.rest-client"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	"postCreateCommand": "python -m pip install -r ${containerWorkspaceFolder}/powerskill/requirements.txt",
	"containerEnv": {
		// Set the cache up so that we don't download the 1.6Gb Model each time
		"TRANSFORMERS_CACHE": "${containerWorkspaceFolder}/powerskill/models"
	},

	"remoteUser": "vscode"
}